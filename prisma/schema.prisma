// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id              String @id
  email           String @unique @db.VarChar(255)
  username        String @db.VarChar(255)
  password        String @db.VarChar(255)
  passwordVersion Int
  discriminator   String @db.VarChar(255)

  presence Int @default(1) // offline | online | away | busy

  guilds Guild[]

  createdChannels Channel[]
  createdMessages Message[]

  friends          Friend[] @relation("friends")
  recipientFriends Friend[] @relation("recipientFriends")

  blockedUsers   BlockedUser[] @relation("blockedUsers")
  blockedByUsers BlockedUser[] @relation("blockedByUsers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Friend {
  id          Int    @id @default(autoincrement())
  requesterId String
  recipientId String
  requester   User   @relation("friends", fields: [requesterId], references: [id])
  recipient   User   @relation("recipientFriends", fields: [recipientId], references: [id])
  status      Int // incoming | outgoing | friends

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Guild {
  id          String  @id
  creatorId   String
  creator     User    @relation(fields: [creatorId], references: [id])
  name        String  @db.VarChar(255)
  icon        String  @db.VarChar(255)
  verified    Boolean
  memberLimit Int
  rateLimit   Int

  channel Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Channel {
  id   String  @id
  name String?

  latestMessageId String
  latestMessage   Message @relation("channelForLatestMessage", fields: [latestMessageId], references: [id])
  
  messages        Message[] 

  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id])

  guildId String?
  guild   Guild?   @relation(fields: [guildId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id        String  @id
  content   String
  channelId String
  channel   Channel @relation(fields: [channelId], references: [id])

  creatorId String
  creator   User   @relation(fields: [creatorId], references: [id])

  channelForLatestMessage Channel? @relation("channelForLatestMessage")


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlockedUser {
  id        Int    @id @default(autoincrement())
  blockerId String
  blockedId String
  blocker   User   @relation("blockedUsers", fields: [blockerId], references: [id])
  blocked   User   @relation("blockedByUsers", fields: [blockedId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
